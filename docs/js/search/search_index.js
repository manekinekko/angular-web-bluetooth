var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AWBOptions.html",[0,1.352,1,1.806]],["body/interfaces/AWBOptions.html",[0,1.549,1,3.145,2,2.611,3,0.495,4,0.495,5,0.438,6,0.83,7,0.332,8,2.31,9,0.438,10,1.289,11,1.084,12,3.51,13,2.686,14,0.555,15,0.035,16,1.077,17,3.319,18,3.903,19,3.014,20,0.684,21,3.903,22,2.611,23,1.678,24,3.014,25,1.868,26,3.014,27,1.562,28,2.2,29,3.014,30,0.689,31,3.751,32,1.306,33,2.151,34,2.611,35,2.681,36,3.014,37,3.319,38,3.014,39,2.31,40,0.143,41,2.2,42,1.87,43,3.014,44,1.549,45,2.225,46,2.2,47,3.014,48,2.31,49,1.699,50,0.025,51,0.025]],["title/components/AppComponent.html",[52,0.868,53,1.131]],["body/components/AppComponent.html",[3,0.562,4,0.562,5,0.497,15,0.034,16,0.777,20,0.777,30,0.497,40,0.163,50,0.027,51,0.027,52,1.516,53,2.062,54,2.383,55,2.122,56,2.122,57,3.42,58,2.122,59,3.19,60,2.415,61,2.383,62,2.624,63,2.122,64,2.624,65,2.383,66,2.122,67,2.976,68,2.122,69,0.96,70,2.122,71,1.47,72,1.757,73,2.122,74,1.47,75,2.122,76,1.47,77,2.122,78,1.47,79,2.122,80,1.47,81,1.927,82,2.122,83,2.122]],["title/modules/AppModule.html",[84,2.279,85,1.806]],["body/modules/AppModule.html",[3,0.418,4,0.418,5,0.37,7,0.28,12,1.951,15,0.035,16,1.191,17,2.673,20,0.578,30,0.37,39,2.673,40,0.121,41,2.527,50,0.023,51,0.023,53,2.169,71,1.991,74,1.991,76,1.991,78,1.991,80,1.991,85,3.582,86,1.748,87,2.673,88,2.545,89,2.545,90,2.545,91,2.545,92,3.487,93,2.545,94,1.951,95,3.061,96,4.195,97,4.195,98,4.195,99,3.061,100,4.195,101,3.061,102,4.195,103,3.487,104,3.061,105,4.195,106,3.061,107,4.195,108,3.061,109,4.195,110,3.061,111,3.061,112,4.195,113,3.061,114,4.195,115,3.061,116,4.195,117,3.061,118,4.195,119,3.061,120,2.545,121,4.195,122,1.748,123,1.748,124,4.195,125,3.061,126,1.434,127,1.195,128,3.061,129,3.061,130,3.061,131,3.061,132,3.061,133,3.061,134,3.061,135,4.195,136,1.579,137,2.545,138,1.094]],["title/classes/AppPage.html",[40,0.125,139,2.279]],["body/classes/AppPage.html",[3,0.598,4,0.598,5,0.529,9,0.529,15,0.034,16,0.827,30,0.529,32,1.209,40,0.173,50,0.028,51,0.028,61,2.051,65,2.051,136,2.258,139,3.806,140,2.258,141,3.639,142,1.1,143,5.894,144,5.894,145,0.998,146,4.378,147,1.1,148,5.096,149,4.378,150,4.378,151,4.378,152,4.378,153,3.153,154,4.378]],["title/components/BatteryLevelComponent.html",[52,0.868,71,1.131]],["body/components/BatteryLevelComponent.html",[3,0.23,4,0.23,5,0.203,7,0.154,9,0.203,10,0.737,11,0.698,14,0.818,15,0.035,16,0.79,20,0.318,23,1.369,25,1.098,27,1.404,30,0.405,32,0.385,33,1.049,40,0.067,44,1.788,45,1.148,46,1.259,49,1.259,50,0.014,51,0.014,52,0.921,53,0.601,54,1.259,55,0.868,56,0.868,58,0.868,59,2.509,60,1.899,62,1.386,63,0.868,64,1.386,65,1.259,66,0.868,67,1.975,68,0.868,69,0.79,70,0.868,71,1.369,72,1.636,73,0.868,74,0.601,75,0.868,76,0.601,77,0.868,78,0.601,79,0.868,80,0.601,81,0.788,82,0.868,83,0.868,120,2.788,122,0.961,123,0.961,126,0.788,127,0.657,142,0.559,145,1.08,147,0.975,153,2.416,155,1.915,156,4.152,157,1.212,158,1.259,159,2.137,160,2.137,161,2.137,162,2.137,163,2.843,164,4.462,165,3.354,166,3.611,167,3.354,168,3.354,169,3.214,170,3.214,171,2.788,172,3.709,173,3.709,174,2.788,175,3.214,176,3.214,177,3.214,178,3.354,179,2.416,180,2.788,181,2.137,182,3.354,183,3.354,184,3.214,185,3.354,186,3.354,187,1.915,188,2.788,189,2.416,190,2.788,191,3.354,192,1.628,193,2.788,194,3.354,195,3.354,196,1.958,197,3.479,198,3.354,199,3.354,200,1.461,201,2.667,202,2.137,203,2.137,204,1.369,205,3.829,206,1.712,207,2.44,208,2.44,209,2.44,210,1.712,211,1.712,212,1.634,213,0.88,214,1.072,215,2.078,216,2.667,217,1.683,218,0.768,219,1.683,220,1.533,221,1.683,222,1.712,223,1.255,224,1.683,225,1.572,226,1.683,227,1.683,228,1.683,229,1.712,230,2.39,231,1.683,232,1.572,233,1.73,234,1.683,235,1.683,236,2.984,237,1.683,238,3.829,239,1.683,240,1.683,241,1.683,242,1.683,243,2.667,244,1.683,245,1.683,246,0.868,247,1.683,248,0.961,249,1.072,250,1.433,251,1.386,252,1.534,253,1.534,254,0.961,255,0.961,256,0.961,257,0.961,258,1.072,259,0.961,260,1.072,261,1.712,262,1.072,263,1.072,264,0.601,265,1.072,266,1.399,267,0.788,268,1.399,269,1.683,270,1.072,271,1.072,272,1.683,273,1.683,274,1.683,275,1.683,276,1.683,277,2.687,278,1.072,279,3.354,280,1.683,281,1.73,282,0.868,283,1.683,284,1.212,285,1.072,286,1.072,287,1.072,288,0.961,289,1.072,290,1.072,291,1.072,292,1.072,293,1.683,294,1.072,295,1.072,296,1.683,297,1.072,298,1.072,299,1.072,300,1.683,301,1.683,302,1.683]],["title/injectables/BleService.html",[215,1.352,303,0.868]],["body/injectables/BleService.html",[3,0.457,4,0.457,5,0.404,7,0.306,9,0.404,10,1.222,11,0.927,14,0.851,15,0.035,16,0.945,20,0.631,23,1.987,30,0.404,32,1.146,35,2.543,40,0.132,50,0.024,51,0.024,60,2.085,61,1.567,69,0.945,126,1.567,127,1.306,142,0.927,145,1.119,147,1.158,192,1.667,196,1.739,200,1.458,213,1.095,215,1.903,218,1.019,220,1.458,223,1.502,230,2.543,246,2.754,264,1.196,267,2.087,288,1.91,303,1.222,304,1.725,305,2.409,306,2.583,307,5.007,308,3.702,309,4.438,310,4.438,311,3.344,312,4.453,313,4.453,314,4.753,315,3.344,316,3.344,317,3.344,318,3.344,319,3.344,320,3.344,321,2.78,322,2.78,323,3.344,324,1.91,325,1.91,326,2.78,327,2.78,328,2.78,329,1.725,330,3.344,331,2.78,332,2.78,333,4.453,334,2.409,335,3.344,336,3.344,337,2.78,338,2.78]],["title/injectables/BrowserWebBluetooth.html",[25,1.036,303,0.868]],["body/injectables/BrowserWebBluetooth.html",[3,0.554,4,0.554,5,0.49,6,1.314,7,0.525,9,0.49,10,1.384,11,0.845,14,0.621,15,0.034,16,0.766,20,0.766,25,1.651,30,0.49,32,0.929,33,1.584,35,2.316,40,0.16,50,0.027,51,0.027,60,2.143,69,0.766,127,1.584,136,2.093,142,1.05,145,1.036,147,0.845,148,4.192,213,1.797,218,0.929,303,1.384,304,2.093,306,2.831,334,3.632,339,3.373,340,5.043,341,5.043,342,5.043,343,5.488,344,4.057,345,4.057,346,4.057,347,4.057,348,3.373,349,4.057,350,4.057,351,4.057,352,3.373,353,4.057,354,4.057]],["title/injectables/ConsoleLoggerService.html",[27,0.949,303,0.868]],["body/injectables/ConsoleLoggerService.html",[0,1.601,3,0.512,4,0.512,5,0.453,6,1.277,7,0.51,9,0.453,11,1.102,14,0.81,15,0.035,16,0.708,20,0.708,27,1.439,28,1.756,30,0.639,40,0.19,50,0.026,51,0.026,61,2.248,69,0.999,142,0.999,145,0.999,147,1.102,158,2.248,218,1.211,220,1.931,223,1.587,225,2.248,278,3.057,303,1.452,304,1.933,325,2.739,355,2.388,356,3.455,357,3.811,358,3.748,359,4.248,360,3.811,361,3.748,362,3.811,363,3.748,364,3.021,365,2.699,366,2.699,367,2.699,368,2.699,369,2.699,370,2.699]],["title/components/DashboardComponent.html",[52,0.868,74,1.131]],["body/components/DashboardComponent.html",[3,0.398,4,0.398,5,0.352,7,0.371,9,0.352,15,0.035,16,0.55,20,0.55,30,0.352,40,0.115,50,0.022,51,0.022,52,1.28,53,1.042,54,1.9,55,1.504,56,1.504,58,1.504,59,2.961,60,2.306,62,1.504,63,1.504,64,2.092,65,1.9,66,1.504,67,2.601,68,1.504,69,0.766,70,1.504,71,1.042,72,1.993,73,1.504,74,1.802,75,1.504,76,1.042,77,1.504,78,1.042,79,1.504,80,1.042,81,2.185,82,1.504,83,1.504,145,0.55,153,2.099,155,1.664,161,3.213,166,2.099,169,2.099,170,2.099,175,3.359,176,2.921,177,3.359,179,2.921,184,2.921,187,1.664,188,2.423,189,2.099,190,2.423,204,2.052,213,1.527,233,1.504,352,2.423,371,2.423,372,5.042,373,4.056,374,4.664,375,4.056,376,4.056,377,2.915,378,3.372,379,4.056,380,5.74,381,5.74,382,3.278,383,5.74,384,5.74,385,2.921,386,4.056,387,2.915,388,2.915,389,2.915,390,2.423,391,2.915,392,3.631,393,3.952,394,2.915,395,2.915,396,2.915,397,2.915,398,1.858,399,2.099,400,2.915,401,2.915,402,4.056,403,5.042,404,3.372,405,2.915,406,4.664,407,2.915,408,2.915]],["title/classes/FakeBluetoothDevice.html",[40,0.125,409,1.632]],["body/classes/FakeBluetoothDevice.html",[3,0.352,4,0.352,5,0.312,6,1.297,7,0.518,9,0.312,10,1.31,11,0.774,13,1.331,14,0.807,15,0.035,30,0.577,32,1.093,40,0.189,50,0.02,51,0.02,69,1.026,138,0.922,140,1.331,142,0.774,145,1.05,147,0.908,192,1.308,196,2.122,200,0.845,204,1.809,212,1.452,213,0.845,218,0.851,220,1.428,223,1.781,232,1.209,233,1.331,250,1.589,264,1.706,281,2.25,282,1.331,306,2.61,324,2.49,329,2.25,382,1.473,409,1.918,410,1.473,411,2.49,412,3.042,413,3.042,414,3.092,415,2.89,416,2.58,417,2.58,418,2.124,419,2.58,420,3.719,421,3.042,422,2.58,423,2.779,424,3.36,425,3.36,426,2.58,427,2.58,428,2.58,429,3.042,430,2.37,431,2.37,432,2.37,433,1.644,434,2.37,435,1.918,436,1.644,437,2.37,438,1.644,439,2.37,440,1.331,441,1.589,442,1.644,443,1.644,444,2.37,445,1.644,446,1.644,447,1.644,448,1.644,449,1.644,450,1.331,451,1.473,452,1.644,453,1.644,454,1.644,455,1.644,456,1.331,457,2.37,458,1.473,459,3.042,460,2.779,461,1.644,462,1.644,463,2.37,464,1.644,465,1.644,466,1.644,467,1.644]],["title/classes/FakeBluetoothRemoteGATTCharacteristic.html",[40,0.125,456,1.632]],["body/classes/FakeBluetoothRemoteGATTCharacteristic.html",[3,0.343,4,0.343,5,0.304,6,1.309,7,0.523,9,0.304,10,1.48,11,0.895,13,1.297,14,0.825,15,0.035,30,0.57,32,1.079,40,0.187,50,0.02,51,0.02,69,0.89,138,0.899,140,1.297,142,0.76,145,1.063,147,0.982,192,1.567,196,1.678,200,0.823,204,1.305,212,1.425,213,0.823,218,0.984,220,1.407,223,1.617,232,1.178,233,1.297,250,1.56,264,2.044,281,2.217,282,1.297,306,2.781,324,2.454,329,2.217,382,1.435,409,1.297,410,1.435,411,1.435,412,1.602,413,3.006,414,3.035,415,2.86,418,1.435,421,2.739,423,2.739,424,3.33,425,3.33,429,3.006,430,2.326,431,2.326,432,2.326,433,1.602,434,2.326,435,1.883,436,1.602,437,2.326,438,1.602,439,2.326,440,1.297,441,1.56,442,1.602,443,1.602,444,2.326,445,1.602,446,1.602,447,1.602,448,1.602,449,1.602,450,1.297,451,1.435,452,1.602,453,1.602,454,1.602,455,1.602,456,1.883,457,3.192,458,2.454,459,3.52,460,3.006,461,2.326,462,1.602,463,2.326,464,3.006,465,1.602,466,2.326,467,1.602,468,3.65,469,2.514,470,2.514,471,2.514,472,2.514,473,2.514,474,2.514,475,2.514,476,2.514,477,2.514,478,2.514]],["title/classes/FakeBluetoothRemoteGATTServer.html",[40,0.125,440,1.632]],["body/classes/FakeBluetoothRemoteGATTServer.html",[3,0.364,4,0.364,5,0.322,6,1.284,7,0.513,9,0.322,10,1.33,11,0.793,13,1.375,14,0.816,15,0.035,30,0.585,32,1.109,40,0.192,50,0.02,51,0.02,69,0.839,138,0.953,140,1.375,142,0.793,145,1.036,147,0.925,192,1.332,196,2.143,200,1.247,204,1.832,212,2.001,213,0.873,218,0.871,220,0.873,223,1.537,232,1.249,233,1.375,250,1.627,264,1.732,281,2.291,282,2.291,306,2.291,324,2.536,329,2.291,382,2.767,409,1.375,410,1.522,411,1.522,412,1.698,413,2.426,415,2.174,418,1.522,421,2.83,423,2.426,424,3.088,425,3.088,429,3.088,430,2.426,431,2.426,432,2.426,433,1.698,434,2.426,435,1.964,436,1.698,437,2.426,438,1.698,439,2.426,440,1.964,441,1.898,442,3.266,443,1.698,444,2.426,445,1.698,446,2.426,447,2.83,448,1.698,449,1.698,450,1.375,451,1.522,452,1.698,453,1.698,454,1.698,455,1.698,456,1.375,457,2.426,458,1.522,459,3.088,460,2.83,461,1.698,462,1.698,463,2.426,464,1.698,465,1.698,466,1.698,467,1.698,479,3.807,480,2.215,481,3.199,482,3.807,483,3.807,484,2.665,485,2.665,486,2.665]],["title/classes/FakeBluetoothRemoteGATTService.html",[40,0.125,450,1.632]],["body/classes/FakeBluetoothRemoteGATTService.html",[3,0.386,4,0.386,5,0.342,6,1.199,7,0.479,9,0.342,10,1.366,11,0.827,13,1.458,14,0.433,15,0.035,30,0.601,32,1.139,40,0.197,50,0.021,51,0.021,69,0.866,138,1.01,140,1.458,142,0.827,145,0.939,147,0.589,192,1.19,196,2.179,200,0.926,204,1.419,212,2.046,213,0.926,218,0.908,223,1.572,233,1.458,250,1.696,264,1.778,267,1.324,281,2.366,282,1.458,306,2.366,324,2.619,329,2.366,382,1.614,409,1.458,410,1.614,411,1.614,412,1.801,413,2.529,415,2.266,418,1.614,421,2.923,423,2.529,424,3.17,425,3.17,429,3.17,430,2.529,431,2.529,432,2.529,433,1.801,434,2.529,435,2.047,436,1.801,437,2.529,438,1.801,439,2.529,440,1.458,441,1.696,442,1.801,443,1.801,444,2.529,445,1.801,446,1.801,447,1.801,448,1.801,449,1.801,450,2.047,451,2.992,452,1.801,453,2.529,454,2.923,455,1.801,456,1.458,457,2.529,458,1.614,459,3.17,460,2.923,461,1.801,462,1.801,463,2.529,464,1.801,465,1.801,466,1.801,467,1.801,480,2.35,487,3.969,488,2.827,489,3.969,490,2.827]],["title/components/HumidityComponent.html",[52,0.868,76,1.131]],["body/components/HumidityComponent.html",[3,0.274,4,0.274,5,0.242,7,0.183,9,0.242,10,0.846,11,0.782,14,0.828,15,0.035,16,0.907,20,0.378,23,1.506,25,1.229,27,1.126,30,0.454,32,0.459,33,1.646,40,0.079,42,1.59,44,1.943,45,1.317,46,1.444,49,1.444,50,0.017,51,0.017,52,1.031,53,0.717,54,1.444,55,1.034,56,1.034,58,1.034,59,2.663,60,2.016,62,1.59,63,1.034,64,1.59,65,1.444,66,1.034,67,2.174,68,1.034,69,0.859,70,1.034,71,0.717,72,0.856,73,1.034,74,0.717,75,1.034,76,1.506,77,1.034,78,0.717,79,1.034,80,0.717,81,0.939,82,1.034,83,1.034,122,1.145,123,1.145,126,0.939,127,0.783,138,1.342,142,0.642,145,1.098,147,1.042,155,2.144,158,1.444,159,2.392,160,2.392,162,2.392,163,2.392,181,2.392,187,2.144,192,1.264,196,1.875,200,1.573,201,2.899,202,2.392,203,2.392,204,1.506,206,1.964,207,2.686,208,2.686,209,2.686,210,1.964,211,1.964,212,1.466,213,1.009,214,1.277,215,2.206,216,2.899,218,0.859,220,1.638,222,1.964,223,1.126,225,1.444,229,1.964,230,2.406,236,2.899,243,1.277,246,1.034,248,1.145,249,1.277,250,1.801,251,1.59,252,1.76,253,1.76,254,1.145,255,1.145,256,1.145,257,1.145,258,1.277,259,1.145,260,1.277,261,1.277,262,1.277,263,1.277,264,0.717,265,1.277,267,0.939,270,1.277,271,1.277,285,1.277,286,1.277,287,1.964,288,1.76,289,1.277,290,1.277,291,1.277,292,1.277,294,1.277,295,1.277,297,1.964,298,1.277,299,1.277,326,1.666,327,2.562,385,2.704,390,1.666,392,2.704,398,1.277,399,1.444,441,0.856,491,1.444,492,3.503,493,3.121,494,3.121,495,3.121,496,3.121,497,3.503,498,2.004,499,2.004,500,2.004,501,2.004,502,2.004,503,2.004,504,2.004,505,2.004,506,3.121,507,2.004,508,3.121,509,1.666,510,2.562,511,2.004,512,3.503,513,2.004,514,2.004,515,2.004,516,2.004,517,2.004,518,2.004,519,1.666,520,1.444,521,1.666,522,2.22,523,2.22,524,2.22,525,2.22,526,2.004,527,1.666,528,1.666,529,1.666,530,1.666,531,2.004,532,1.666,533,1.666,534,1.666,535,1.444,536,3.121,537,1.666,538,2.562,539,1.666,540,1.666,541,1.666,542,1.666,543,1.666,544,1.666,545,1.666,546,1.666,547,1.666,548,1.666,549,1.666,550,1.666,551,2.562,552,2.004,553,1.444,554,1.666,555,1.666,556,1.666,557,1.444]],["title/interfaces/Logger.html",[0,1.352,364,1.806]],["body/interfaces/Logger.html",[0,1.581,2,2.665,3,0.505,4,0.505,5,0.447,6,1.271,7,0.508,9,0.447,11,1.095,14,0.805,15,0.035,16,0.699,20,0.699,27,1.11,28,1.734,30,0.636,40,0.188,50,0.026,51,0.026,61,2.23,69,0.993,142,0.991,145,0.993,147,1.095,158,2.23,218,1.204,220,1.925,223,1.835,225,2.23,278,3.032,303,1.444,325,2.717,355,2.358,356,3.427,357,3.427,359,4.234,360,3.427,362,3.427,364,3.17,365,3.427,366,3.427,367,3.427,368,2.665,369,2.665,370,2.665,558,3.701,559,3.701,560,3.701]],["title/injectables/NoLoggerService.html",[28,1.482,303,0.868]],["body/injectables/NoLoggerService.html",[0,1.601,3,0.512,4,0.512,5,0.453,6,1.277,7,0.51,9,0.453,11,1.102,14,0.81,15,0.035,16,0.708,20,0.708,27,1.124,28,2.248,30,0.639,40,0.19,50,0.026,51,0.026,61,2.248,69,0.999,142,0.999,145,0.999,147,1.102,158,2.248,218,1.211,220,1.931,223,1.587,225,2.248,278,3.057,303,1.452,304,1.933,325,2.739,355,2.388,356,3.455,357,3.811,359,4.248,360,3.811,362,3.811,364,3.021,365,2.699,366,2.699,367,2.699,368,2.699,369,2.699,370,2.699,561,3.748,562,3.748,563,3.748]],["title/injectables/ServerWebBluetooth.html",[303,0.868,564,2.279]],["body/injectables/ServerWebBluetooth.html",[3,0.611,4,0.611,5,0.541,6,1.226,7,0.49,9,0.541,15,0.034,16,0.845,20,0.845,30,0.541,32,1.025,40,0.177,42,2.956,50,0.029,51,0.029,142,1.115,145,0.845,147,0.932,259,3.391,303,1.47,304,2.31,564,3.857,565,3.722,566,4.477,567,4.477,568,3.722,569,4.477]],["title/components/StepCounterComponent.html",[52,0.868,78,1.131]],["body/components/StepCounterComponent.html",[3,0.268,4,0.268,5,0.237,7,0.18,9,0.237,10,0.833,11,0.772,14,0.823,15,0.035,16,0.851,20,0.371,23,1.491,25,1.214,27,1.112,30,0.448,32,0.694,33,1.185,40,0.078,44,1.926,45,1.296,46,1.422,49,1.422,50,0.016,51,0.016,52,1.018,53,0.702,54,1.422,55,1.013,56,1.013,58,1.013,59,2.646,60,2.003,62,1.565,63,1.013,64,1.565,65,1.422,66,1.013,67,2.151,68,1.013,69,0.851,70,1.013,71,0.702,72,0.839,73,1.013,74,0.702,75,1.013,76,0.702,77,1.013,78,1.491,79,1.013,80,0.702,81,0.92,82,1.013,83,1.013,122,1.122,123,1.122,126,0.92,127,0.767,138,1.085,142,0.632,145,1.062,147,0.992,155,2.117,158,1.422,159,2.362,160,2.362,162,2.362,163,3.036,166,2.67,169,2.67,170,2.67,171,3.082,172,3.96,173,3.96,174,3.082,175,2.67,176,2.67,177,2.67,179,3.431,180,3.082,181,3.036,184,2.67,187,2.117,189,2.67,192,1.613,193,3.082,196,1.86,200,1.56,201,2.872,202,2.362,203,2.362,204,1.491,206,1.934,207,2.657,208,2.657,209,2.657,210,1.934,211,1.934,212,1.448,213,0.994,214,1.252,215,2.191,216,2.872,218,0.848,220,1.56,222,1.934,223,1.112,225,1.737,229,1.934,230,2.573,232,0.92,236,2.872,243,1.252,246,1.013,248,1.122,249,1.252,250,1.926,251,1.565,252,1.733,253,1.733,254,1.122,255,1.122,256,1.122,257,1.122,258,1.252,259,1.122,260,1.252,261,1.252,262,1.252,263,1.252,264,0.702,267,0.92,270,1.252,271,1.252,281,1.013,284,1.415,285,1.252,286,1.252,287,1.934,288,1.122,289,1.252,290,1.252,291,1.252,292,1.252,294,1.252,295,1.252,297,1.934,298,1.252,299,1.252,393,2.185,481,2.185,522,2.185,523,2.185,524,2.185,525,2.185,535,1.415,553,1.415,557,1.415,570,1.415,571,3.034,572,3.707,573,3.707,574,3.707,575,3.96,576,3.707,577,3.707,578,1.964,579,1.964,580,1.964,581,1.964,582,1.964,583,1.964,584,1.964,585,1.964,586,1.964,587,1.964,588,1.964,589,1.964,590,1.964,591,4.17,592,1.964,593,4.17,594,1.964,595,1.964,596,1.964,597,1.964,598,1.964]],["title/components/TemperatureComponent.html",[52,0.868,80,1.131]],["body/components/TemperatureComponent.html",[3,0.272,4,0.272,5,0.241,7,0.182,9,0.241,10,0.842,11,0.778,14,0.826,15,0.035,16,0.904,20,0.376,23,1.501,25,1.224,27,1.121,30,0.452,32,0.702,33,1.64,40,0.079,42,1.581,44,1.937,45,1.31,46,1.437,49,1.437,50,0.016,51,0.016,52,1.026,53,0.712,54,1.437,55,1.027,56,1.027,58,1.027,59,2.657,60,2.012,62,1.581,63,1.027,64,1.581,65,1.437,66,1.027,67,2.166,68,1.027,69,0.856,70,1.027,71,0.712,72,0.851,73,1.027,74,0.712,75,1.027,76,0.712,77,1.027,78,0.712,79,1.027,80,1.501,81,1.968,82,1.027,83,1.027,122,1.137,123,1.137,126,0.933,127,0.777,138,1.336,142,0.638,145,1.097,147,1.039,155,2.135,158,1.437,159,2.382,160,2.382,162,2.382,163,2.382,181,2.382,187,2.135,192,1.259,196,1.87,200,1.568,201,2.89,202,2.382,203,2.382,204,1.501,206,1.954,207,2.676,208,2.676,209,2.676,210,1.954,211,1.954,212,1.46,213,1.004,214,1.269,215,2.201,216,2.89,218,0.856,220,1.634,222,1.954,223,1.121,225,1.752,229,1.954,230,2.398,236,2.89,243,1.269,246,1.027,248,1.137,249,1.269,250,2.046,251,1.581,252,1.751,253,1.751,254,1.137,255,1.137,256,1.137,257,1.137,258,1.269,259,1.137,260,1.269,261,1.269,262,1.269,263,1.269,264,0.712,265,1.269,267,0.933,270,1.269,271,1.269,284,1.434,285,1.269,286,1.269,287,1.954,288,1.137,289,1.269,290,1.269,291,1.269,292,1.269,294,1.269,295,1.269,297,1.954,298,1.269,299,1.269,392,2.693,398,1.269,399,1.434,441,0.851,492,3.491,493,3.108,494,3.108,495,3.108,496,3.108,497,3.491,506,3.108,508,3.108,509,1.655,510,2.549,512,3.491,519,1.655,520,1.434,521,1.655,522,2.208,523,2.208,524,2.208,525,2.208,527,1.655,528,1.655,529,1.655,530,1.655,532,1.655,533,1.655,534,1.655,535,1.434,536,3.108,537,1.655,538,2.549,539,1.655,540,1.655,541,1.655,542,1.655,543,1.655,544,1.655,545,1.655,546,1.655,547,1.655,548,1.655,549,1.655,550,1.655,551,2.549,553,1.434,554,1.655,555,1.655,556,1.655,557,1.434,575,1.655,599,1.434,600,1.991,601,1.991,602,1.991,603,1.991,604,1.991,605,1.991,606,1.991,607,1.991,608,1.991,609,1.991,610,1.991,611,1.991,612,1.991,613,1.991,614,1.991,615,1.991,616,1.991,617,3.066,618,3.066,619,1.991]],["title/modules/WebBluetoothModule.html",[41,1.482,84,2.279]],["body/modules/WebBluetoothModule.html",[0,1.518,1,3.237,3,0.485,4,0.485,5,0.429,6,1.061,7,0.424,8,2.264,11,0.965,12,2.264,13,1.832,14,0.544,15,0.035,16,1.07,17,3.287,18,4.288,19,2.953,20,0.671,21,3.852,22,2.558,23,1.657,24,2.953,25,1.857,26,2.953,27,1.547,28,2.171,29,2.953,30,0.685,31,3.715,32,1.298,33,2.135,34,2.558,35,2.945,36,2.953,37,3.287,38,2.953,39,2.264,40,0.141,41,2.417,42,2.39,43,3.852,44,1.518,45,2.204,46,2.171,47,2.953,48,2.264,49,1.665,50,0.025,51,0.025,69,0.671,86,2.028,142,0.74,145,0.671,147,0.74,192,1.065,218,0.813,232,1.665,620,3.552,621,3.552]],["title/coverage.html",[622,3.567]],["body/coverage.html",[0,1.696,1,1.614,5,0.342,6,1.406,7,0.562,8,3.17,14,0.433,15,0.035,23,1.01,25,1.3,27,0.848,28,1.324,31,3.304,33,1.104,37,1.801,40,0.207,44,2.125,48,1.801,50,0.021,51,0.021,52,1.491,53,1.01,57,2.35,71,1.01,74,1.01,76,1.01,78,1.01,80,1.01,139,2.036,141,2.35,156,3.583,157,3.583,215,2.239,251,2.566,303,1.491,305,2.036,328,5.106,339,2.35,355,2.923,364,1.614,371,2.35,393,4.629,409,1.458,410,2.841,440,1.458,450,1.458,456,1.458,491,3.583,564,2.036,565,2.35,570,3.583,599,3.583,622,2.35,623,2.036,624,2.827,625,2.827,626,2.827,627,4.587,628,6.239,629,2.35,630,2.827,631,2.827,632,3.3,633,3.3,634,2.35,635,2.35,636,4.975,637,3.969,638,2.827,639,2.827,640,2.827,641,2.827,642,3.969,643,2.827,644,2.35,645,3.3,646,2.35,647,2.827,648,2.827]],["title/dependencies.html",[87,2.42,649,1.913]],["body/dependencies.html",[15,0.035,20,0.814,22,3.107,50,0.028,51,0.028,87,2.749,103,4.354,127,1.685,136,2.701,248,2.463,520,3.107,650,4.314,651,6.238,652,4.314,653,5.237,654,4.314,655,4.314,656,4.314,657,4.314,658,4.314,659,4.314,660,4.314,661,4.314,662,4.314,663,3.586,664,4.314,665,4.314,666,4.314,667,4.314,668,4.314,669,4.314,670,4.314,671,4.314,672,4.314,673,4.314]],["title/miscellaneous/functions.html",[674,1.37,675,3.157]],["body/miscellaneous/functions.html",[1,3.144,6,1.074,7,0.429,8,2.989,9,0.567,11,0.977,14,0.718,15,0.031,25,1.913,34,3.378,35,2.678,37,3.724,48,3.508,50,0.03,51,0.03,69,0.886,218,1.074,674,2.42,675,3.9,676,5.844]],["title/index.html",[9,0.321,677,1.913,678,1.913]],["body/index.html",[7,0.451,12,1.37,15,0.035,16,1.02,17,2.072,20,0.74,23,1.765,30,0.474,32,1.281,39,1.37,40,0.155,41,1.524,42,1.677,45,0.919,50,0.017,51,0.017,60,1.27,61,1.524,72,1.675,84,2.342,85,1.228,94,1.37,126,2.048,127,2.061,136,1.109,137,1.788,138,1.162,161,2.498,192,1.537,197,1.788,200,1.728,204,0.769,212,1.928,246,1.677,256,1.228,257,1.228,264,1.678,265,1.37,266,2.703,267,2.199,268,2.703,282,1.677,303,1.2,309,2.703,310,3.633,321,2.703,322,2.703,325,1.857,329,1.677,331,2.703,332,1.788,334,2.342,337,1.788,338,2.703,378,1.788,398,2.072,404,1.788,411,1.228,415,1.228,418,1.228,435,1.109,441,0.919,451,1.228,458,1.228,623,2.824,649,1.549,663,2.703,677,1.549,678,1.549,679,2.15,680,3.252,681,3.252,682,2.15,683,2.15,684,2.15,685,2.15,686,2.15,687,2.15,688,2.15,689,2.15,690,2.15,691,3.902,692,3.252,693,2.15,694,3.252,695,4.37,696,3.252,697,3.252,698,3.252,699,3.252,700,4.936,701,5.126,702,3.252,703,3.252,704,2.15,705,3.252,706,2.15,707,2.15,708,2.15,709,3.252,710,2.15,711,2.15,712,2.15,713,2.15,714,2.15,715,2.15,716,3.252,717,2.15,718,3.252,719,2.15,720,2.15,721,2.15,722,2.15,723,2.703,724,2.15,725,2.15,726,2.15,727,2.15,728,3.252,729,2.15,730,2.15,731,2.15,732,2.15,733,2.15,734,3.252,735,1.788,736,2.15,737,2.15,738,2.15,739,2.15,740,2.15,741,2.15,742,2.15,743,2.15,744,2.15,745,2.15,746,2.15,747,2.15,748,1.788,749,3.252,750,2.15,751,2.15,752,3.252,753,3.252,754,2.15,755,2.15,756,2.15,757,2.703,758,2.15,759,2.15,760,3.252,761,2.15,762,2.15,763,2.15,764,2.15,765,2.15,766,2.15,767,2.15,768,2.15,769,2.15,770,2.15,771,2.15,772,2.15,773,2.342,774,2.703,775,3.259,776,1.788,777,1.788,778,1.788,779,1.788,780,2.703,781,1.788,782,1.788,783,1.788,784,1.788,785,1.788,786,2.703,787,4.492,788,1.788,789,1.788,790,1.788,791,3.259,792,1.788,793,2.703,794,1.788,795,1.788,796,1.788,797,1.788,798,1.788,799,1.788,800,1.788,801,1.788,802,1.788,803,2.703,804,1.788,805,1.788,806,1.788,807,1.788,808,1.788,809,1.788,810,2.703,811,2.703,812,1.788,813,1.788,814,1.788,815,1.788,816,1.788,817,1.788,818,1.788,819,1.788,820,1.788,821,1.788,822,1.788,823,1.788,824,1.788,825,1.788,826,1.788,827,1.788,828,1.788,829,1.788,830,1.788,831,1.788,832,1.788,833,1.788,834,1.788,835,1.788,836,1.788,837,1.788,838,1.788,839,1.788,840,1.788]],["title/license.html",[677,1.913,678,1.913,773,1.913]],["body/license.html",[15,0.027,50,0.027,51,0.027,94,2.533,435,2.05,623,2.863,691,4.139,723,3.304,757,3.304,773,2.863,774,4.139,775,4.52,776,3.304,777,3.304,778,3.304,779,3.304,780,4.139,781,3.304,782,3.304,783,3.304,784,3.304,785,3.304,786,4.139,787,5.152,788,3.304,789,3.304,790,3.304,791,4.52,792,3.304,793,4.139,794,3.304,795,3.304,796,3.304,797,3.304,798,3.304,799,3.304,800,3.304,801,3.304,802,3.304,803,4.139,804,3.304,805,3.304,806,3.304,807,3.304,808,3.304,809,3.304,810,4.139,811,4.139,812,3.304,813,3.304,814,3.304,815,3.304,816,3.304,817,3.304,818,3.304,819,3.304,820,3.304,821,3.304,822,3.304,823,3.304,824,3.304,825,3.304,826,3.304,827,3.304,828,3.304,829,3.304,830,3.304,831,3.304,832,3.304,833,3.304,834,3.304,835,3.304,836,3.304,837,3.304,838,3.304,839,3.304,840,3.304]],["title/modules.html",[86,2.45]],["body/modules.html",[15,0.03,41,2.295,50,0.03,51,0.03,85,2.797,86,2.797,136,2.527,348,4.072,841,4.898,842,5.646,843,4.898,844,4.072]],["title/overview.html",[845,3.567]],["body/overview.html",[2,3.019,15,0.034,41,2.609,50,0.028,51,0.028,53,2.197,54,1.964,71,1.99,74,1.99,76,1.99,78,1.99,80,1.99,85,3.677,86,2.393,87,3.279,88,3.484,89,3.484,90,3.484,91,3.484,92,4.278,93,3.484,94,2.671,140,2.162,304,2.162,735,4.278,748,3.484,845,3.484,846,5.146]],["title/properties.html",[10,1.042,649,1.913]],["body/properties.html",[10,1.367,15,0.032,50,0.031,51,0.031,847,4.981,848,4.981]],["title/miscellaneous/typealiases.html",[674,1.37,849,3.798]],["body/miscellaneous/typealiases.html",[6,1.097,7,0.438,9,0.579,14,0.902,15,0.03,50,0.03,51,0.03,305,3.452,314,4.635,481,4.015,629,3.984,674,2.472,850,4.792,851,5.575,852,4.792,853,4.792]],["title/miscellaneous/variables.html",[674,1.37,854,3.157]],["body/miscellaneous/variables.html",[6,0.353,7,0.141,9,0.186,14,0.692,15,0.035,23,1.866,25,1.542,27,1.412,33,1.839,44,2.012,45,2.012,46,2.207,49,2.207,50,0.013,51,0.013,72,0.659,81,0.723,138,0.552,156,1.112,157,2.623,161,0.983,192,1.655,200,1.842,215,2.358,232,2.586,251,2.693,252,2.689,253,2.689,254,2.08,255,2.08,308,1.283,385,1.112,441,0.659,491,1.112,568,2.63,570,1.112,599,1.112,632,1.283,633,2.63,634,2.083,635,2.083,644,1.283,645,3.028,646,1.283,674,0.796,844,2.63,854,1.283,855,3.164,856,3.164,857,3.164,858,3.164,859,1.543,860,1.543,861,2.506,862,2.506,863,1.543,864,1.543,865,1.543,866,1.543,867,6.324,868,6.324,869,6.324,870,6.324,871,1.543,872,1.543,873,1.543,874,1.543,875,1.543,876,1.543,877,1.543,878,1.543,879,1.543,880,1.543,881,1.543,882,1.543,883,1.543,884,1.543,885,1.543,886,1.543,887,1.543,888,1.543,889,1.543,890,1.543,891,1.543,892,5.003,893,1.543,894,4.71,895,1.543,896,4.71,897,1.543,898,1.543,899,1.543,900,1.543,901,1.543,902,1.543,903,1.543,904,1.543,905,1.543,906,1.543,907,3.164,908,3.164,909,1.543,910,1.543,911,1.543,912,1.543,913,1.543,914,1.543,915,1.543,916,1.543,917,1.543,918,1.543,919,1.543,920,1.543,921,1.543,922,1.543,923,1.543,924,1.543,925,1.543,926,1.543,927,1.543,928,1.543,929,1.543,930,1.543,931,1.543,932,1.543,933,1.543,934,1.543,935,1.543,936,1.543,937,1.543,938,1.543,939,1.543,940,1.543,941,1.543,942,1.543,943,1.543,944,1.543,945,1.543,946,1.543,947,1.543,948,1.543,949,1.543,950,1.543,951,1.543,952,1.543,953,1.543,954,1.543,955,1.543,956,1.543,957,1.543,958,1.543,959,1.543,960,1.543,961,1.543,962,1.543,963,1.543,964,1.543,965,1.543,966,1.543]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{},"coverage.html":{}}}],["0.0.6",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":193,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["000000",{"_index":542,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["000000000000",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0451",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["1.35.0",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":575,"title":{},"body":{"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["10px",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["112px",{"_index":572,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["11em",{"_index":574,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["120px",{"_index":180,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["15px",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{}}}],["16.0.0",{"_index":848,"title":{},"body":{"properties.html":{}}}],["16px",{"_index":493,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["17",{"_index":544,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["17.1.2",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":735,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.3.0",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["2.a",{"_index":690,"title":{},"body":{"index.html":{}}}],["2.b",{"_index":710,"title":{},"body":{"index.html":{}}}],["2017",{"_index":777,"title":{},"body":{"index.html":{},"license.html":{}}}],["20px",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["21/31",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["214px",{"_index":573,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["222px",{"_index":178,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["24px",{"_index":183,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["255px",{"_index":191,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["29.0.5",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":738,"title":{},"body":{"index.html":{}}}],["32px",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4",{"_index":743,"title":{},"body":{"index.html":{}}}],["4000",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40px",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4933",{"_index":523,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["5",{"_index":748,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.1.1",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["52ffa9740042",{"_index":525,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["5em",{"_index":174,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["5px",{"_index":188,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["6",{"_index":846,"title":{},"body":{"overview.html":{}}}],["67",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["700px",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["90px",{"_index":186,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["9b10",{"_index":524,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["9b35",{"_index":522,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["__register__",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_config",{"_index":307,"title":{},"body":{"injectables/BleService.html":{}}}],["above",{"_index":809,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolute",{"_index":176,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["abstract",{"_index":720,"title":{},"body":{"index.html":{}}}],["accelerometer",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceptalldevices",{"_index":732,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":211,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["action",{"_index":834,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["addeventlistener",{"_index":414,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["addeventlistener(type",{"_index":423,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["address",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advanced",{"_index":711,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":170,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["and/or",{"_index":801,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":22,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["angular/material/toolbar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["annotated",{"_index":696,"title":{},"body":{"index.html":{}}}],["api",{"_index":749,"title":{},"body":{"index.html":{}}}],["app",{"_index":765,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":85,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":139,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["args",{"_index":359,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["arising",{"_index":838,"title":{},"body":{"index.html":{},"license.html":{}}}],["ask",{"_index":744,"title":{},"body":{"index.html":{}}}],["associated",{"_index":788,"title":{},"body":{"index.html":{},"license.html":{}}}],["authors",{"_index":827,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{}}}],["available",{"_index":844,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["awboptions",{"_index":1,"title":{"interfaces/AWBOptions.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b",{"_index":252,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["b000",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["barometer",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battery",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["battery_charging_full",{"_index":194,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["battery_level",{"_index":268,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["battery_service",{"_index":266,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["batterylevelcomponent",{"_index":71,"title":{"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterylevelservice",{"_index":699,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":742,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_primary_service",{"_index":734,"title":{},"body":{"index.html":{}}}],["ble",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["ble.service",{"_index":249,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["blecore",{"_index":251,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice",{"_index":215,"title":{"injectables/BleService.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice(b",{"_index":255,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":181,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["blog",{"_index":763,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{},"index.html":{}}}],["bluetooth.service",{"_index":24,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts",{"_index":8,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts:32",{"_index":621,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.service.ts",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bluetooth/src/lib/lang/uuids/ti",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetooth/src/lib/logger.service.ts",{"_index":355,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/logger.service.ts:13",{"_index":361,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:16",{"_index":358,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:19",{"_index":363,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:28",{"_index":562,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:29",{"_index":561,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:30",{"_index":563,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:4",{"_index":559,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:5",{"_index":558,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:6",{"_index":560,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/platform/browser.ts",{"_index":339,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/browser.ts:14",{"_index":344,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/browser.ts:5",{"_index":341,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/server.ts",{"_index":565,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/server.ts:5",{"_index":566,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["bluetooth/src/lib/test.utils.ts",{"_index":410,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/test.utils.ts:103",{"_index":477,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:12",{"_index":417,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:14",{"_index":420,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:17",{"_index":426,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:24",{"_index":428,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:29",{"_index":427,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:39",{"_index":482,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:41",{"_index":483,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:45",{"_index":484,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:50",{"_index":486,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:54",{"_index":485,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:60",{"_index":488,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:61",{"_index":489,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:65",{"_index":490,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:7",{"_index":419,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:71",{"_index":474,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:72",{"_index":473,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:73",{"_index":471,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:74",{"_index":472,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:78",{"_index":469,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:8",{"_index":422,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:86",{"_index":478,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:90",{"_index":475,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:97",{"_index":476,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth_disabled",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetooth_searching",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetoothcharacteristicproperties",{"_index":457,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcharacteristicuuid",{"_index":454,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcore",{"_index":23,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bluetoothcore(b",{"_index":254,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["bluetoothremotegattcharacteristic",{"_index":746,"title":{},"body":{"index.html":{}}}],["bluetoothremotegattserver",{"_index":418,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["bluetoothremotegattservice",{"_index":740,"title":{},"body":{"index.html":{}}}],["bluetoothserviceuuid",{"_index":447,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["boolean",{"_index":13,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"modules/WebBluetoothModule.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["bordervisible",{"_index":540,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["bottom",{"_index":190,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["browse",{"_index":842,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser's",{"_index":689,"title":{},"body":{"index.html":{}}}],["browser.get(browser.baseurl",{"_index":151,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwebbluetooth",{"_index":25,"title":{"injectables/BrowserWebBluetooth.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["c",{"_index":776,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":700,"title":{},"body":{"index.html":{}}}],["can't",{"_index":719,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":492,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["card",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cc2650",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":166,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["changelog",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["changevalue",{"_index":468,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["changevalue(value",{"_index":466,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["characteristic",{"_index":267,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["characteristics",{"_index":451,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["characteristicvaluechanged",{"_index":460,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["charge",{"_index":783,"title":{},"body":{"index.html":{},"license.html":{}}}],["chart",{"_index":494,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["chartref",{"_index":495,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["checkout",{"_index":761,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":779,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":830,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":40,"title":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":140,"title":{},"body":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"overview.html":{}}}],["clear",{"_index":415,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["close",{"_index":299,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":195,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["command",{"_index":758,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["component",{"_index":52,"title":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["components",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"overview.html":{}}}],["conditions",{"_index":808,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":308,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/variables.html":{}}}],["config(options",{"_index":313,"title":{},"body":{"injectables/BleService.html":{}}}],["configuration",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["connected",{"_index":282,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["connection",{"_index":839,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":197,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["console.error.apply(console",{"_index":369,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.log('getting",{"_index":709,"title":{},"body":{"index.html":{}}}],["console.log('reading",{"_index":553,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["console.log.apply(console",{"_index":368,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.warn.apply(console",{"_index":370,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["consoleloggerservice",{"_index":27,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consoleloggerserviceconfig",{"_index":48,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["consoleloggerserviceconfig(options",{"_index":34,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":250,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor(ble",{"_index":311,"title":{},"body":{"injectables/BleService.html":{}}}],["constructor(device",{"_index":480,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(id",{"_index":416,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["constructor(properties",{"_index":461,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(public",{"_index":329,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["constructor(service",{"_index":214,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["container",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["content",{"_index":153,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["contract",{"_index":835,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributions",{"_index":767,"title":{},"body":{"index.html":{}}}],["control",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":803,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":775,"title":{},"body":{"index.html":{},"license.html":{}}}],["correctly",{"_index":685,"title":{},"body":{"index.html":{}}}],["count",{"_index":591,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["counter",{"_index":597,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["coverage",{"_index":622,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current_used_parameters",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":294,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["damages",{"_index":831,"title":{},"body":{"index.html":{},"license.html":{}}}],["dashboard",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["dashboard.component.css",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcomponent",{"_index":74,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataview",{"_index":264,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["deal",{"_index":790,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":840,"title":{},"body":{"index.html":{},"license.html":{}}}],["decimal",{"_index":618,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["decoder",{"_index":263,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["decoder(value",{"_index":323,"title":{},"body":{"injectables/BleService.html":{}}}],["decorators",{"_index":509,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["default",{"_index":232,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":145,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["demo",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":49,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":353,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["determinate",{"_index":238,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["dev.to",{"_index":764,"title":{},"body":{"index.html":{}}}],["developer",{"_index":722,"title":{},"body":{"index.html":{}}}],["device",{"_index":212,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["device.gatt",{"_index":443,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["device.name",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device_id",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_information",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devicesubscription",{"_index":198,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["direction",{"_index":167,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["directions_walk",{"_index":577,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["directive",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["disconnect",{"_index":204,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["disconnect_request",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disconnectdevice",{"_index":309,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["disconnected",{"_index":283,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["discover",{"_index":728,"title":{},"body":{"index.html":{}}}],["discovery",{"_index":730,"title":{},"body":{"index.html":{}}}],["display",{"_index":163,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["distribute",{"_index":799,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentation",{"_index":623,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["dynamic",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":141,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":146,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":260,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["easiest",{"_index":693,"title":{},"body":{"index.html":{}}}],["ef680200",{"_index":521,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ef680201",{"_index":616,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["ef680203",{"_index":526,"title":{},"body":{"components/HumidityComponent.html":{}}}],["ef680400",{"_index":595,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["ef680405",{"_index":596,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["element(by.css('app",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":508,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["elsewhere",{"_index":721,"title":{},"body":{"index.html":{}}}],["emites",{"_index":725,"title":{},"body":{"index.html":{}}}],["emitted",{"_index":703,"title":{},"body":{"index.html":{}}}],["enable",{"_index":687,"title":{},"body":{"index.html":{}}}],["enabletracing",{"_index":12,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["environment",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":291,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["error",{"_index":225,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["error('your",{"_index":347,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["error(...args",{"_index":357,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["error(args",{"_index":366,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["event",{"_index":435,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{},"license.html":{}}}],["eventlistener",{"_index":425,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["example",{"_index":697,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["express",{"_index":818,"title":{},"body":{"index.html":{},"license.html":{}}}],["f000180a",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000180f",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a19",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a23",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a24",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a25",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a26",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a27",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a28",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a29",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a2a",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a50",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa00",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa01",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa02",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa03",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa10",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa11",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa12",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa13",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa20",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa21",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa22",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa23",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa30",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa31",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa32",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa33",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa40",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa41",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa42",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa44",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa50",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa51",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa52",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa53",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa64",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa65",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa66",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa70",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa71",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa72",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa73",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa80",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa81",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa82",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa83",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac00",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac01",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac02",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac03",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc0",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc1",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc2",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc3",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc0",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc1",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc2",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc3",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc4",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe0",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe1",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakebluetoothdevice",{"_index":409,"title":{"classes/FakeBluetoothDevice.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattcharacteristic",{"_index":456,"title":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattserver",{"_index":440,"title":{"classes/FakeBluetoothRemoteGATTServer.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattservice",{"_index":450,"title":{"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["false",{"_index":441,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":769,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":548,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ffffff",{"_index":537,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["files",{"_index":789,"title":{},"body":{"index.html":{},"license.html":{}}}],["fillstyle",{"_index":536,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["firmware_rev",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":823,"title":{},"body":{"index.html":{},"license.html":{}}}],["flex",{"_index":164,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["following",{"_index":757,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":172,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["fontsize",{"_index":543,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["forroot",{"_index":620,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["forroot(options",{"_index":43,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["found",{"_index":750,"title":{},"body":{"index.html":{}}}],["free",{"_index":723,"title":{},"body":{"index.html":{},"license.html":{}}}],["full",{"_index":762,"title":{},"body":{"index.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["functions",{"_index":675,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":806,"title":{},"body":{"index.html":{},"license.html":{}}}],["gatt",{"_index":411,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["gatt_characteristic_battery_level",{"_index":713,"title":{},"body":{"index.html":{}}}],["gatt_primary_service",{"_index":714,"title":{},"body":{"index.html":{}}}],["gattserverdisconnected",{"_index":421,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic",{"_index":487,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic(characteristic",{"_index":453,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getdevice",{"_index":246,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["getdevicestatus",{"_index":205,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["getprimaryservice",{"_index":479,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["getprimaryservice(service",{"_index":446,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getting",{"_index":677,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitletext",{"_index":143,"title":{},"body":{"classes/AppPage.html":{}}}],["given",{"_index":704,"title":{},"body":{"index.html":{}}}],["granted",{"_index":782,"title":{},"body":{"index.html":{},"license.html":{}}}],["graph",{"_index":843,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["gyroscope",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hardware_rev",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haserror",{"_index":206,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["haserror(error",{"_index":222,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["height",{"_index":576,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["help",{"_index":772,"title":{},"body":{"index.html":{}}}],["here",{"_index":695,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":781,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":828,"title":{},"body":{"index.html":{},"license.html":{}}}],["host",{"_index":162,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["http://caniuse.com/#search=bluetooth",{"_index":351,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["https://manekinekko.github.io/angular",{"_index":751,"title":{},"body":{"index.html":{}}}],["humidity",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"miscellaneous/variables.html":{}}}],["humidity'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["humiditycomponent",{"_index":76,"title":{"components/HumidityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["icon",{"_index":189,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["id",{"_index":412,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["identifier",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["ieee11073",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_block_request",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_count",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_notify",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_status",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":158,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["implied",{"_index":819,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["imports",{"_index":39,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["included",{"_index":812,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":793,"title":{},"body":{"index.html":{},"license.html":{}}}],["indeterminate",{"_index":280,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["initchart",{"_index":497,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["initialvalue",{"_index":459,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["injectable",{"_index":303,"title":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":304,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"overview.html":{}}}],["injectiontoken",{"_index":19,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["injectiontoken('awboptions",{"_index":38,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["install",{"_index":680,"title":{},"body":{"index.html":{}}}],["installed",{"_index":684,"title":{},"body":{"index.html":{}}}],["instance",{"_index":259,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["integer",{"_index":617,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"overview.html":{}}}],["interpolation",{"_index":534,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["io",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":771,"title":{},"body":{"index.html":{}}}],["it/conventional",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["jest",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":165,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["key",{"_index":324,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["keypress",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":817,"title":{},"body":{"index.html":{},"license.html":{}}}],["l",{"_index":253,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":541,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["layoutmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":187,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["length",{"_index":531,"title":{},"body":{"components/HumidityComponent.html":{}}}],["level",{"_index":161,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["level'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["level.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.ts",{"_index":157,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["level.component.ts:115",{"_index":228,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:123",{"_index":231,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:129",{"_index":219,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:135",{"_index":224,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:139",{"_index":226,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:66",{"_index":244,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:67",{"_index":239,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:68",{"_index":234,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:69",{"_index":245,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:70",{"_index":242,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:71",{"_index":237,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:73",{"_index":247,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:75",{"_index":217,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:78",{"_index":240,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:79",{"_index":241,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:80",{"_index":235,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:89",{"_index":227,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:99",{"_index":221,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["liability",{"_index":832,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":829,"title":{},"body":{"index.html":{},"license.html":{}}}],["license",{"_index":773,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":794,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":820,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":327,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["linewidth",{"_index":547,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["list",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["listener",{"_index":424,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listener(mockedevent",{"_index":434,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listeners",{"_index":413,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["literal",{"_index":481,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["log",{"_index":356,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(...args",{"_index":360,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(args",{"_index":365,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["logger",{"_index":364,"title":{"interfaces/Logger.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["logger.service",{"_index":29,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["logic",{"_index":717,"title":{},"body":{"index.html":{}}}],["logs",{"_index":688,"title":{},"body":{"index.html":{}}}],["magnetometer",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":256,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["makemetokeninjector",{"_index":37,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manekinekko/angular",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["manifacturer",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":321,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["map((value",{"_index":705,"title":{},"body":{"index.html":{}}}],["map(this._config.decoder",{"_index":333,"title":{},"body":{"injectables/BleService.html":{}}}],["margin",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["mat",{"_index":184,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["matbuttonmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":216,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["matsnackbarmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{}}}],["merchantability",{"_index":822,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":797,"title":{},"body":{"index.html":{},"license.html":{}}}],["mergemap",{"_index":712,"title":{},"body":{"index.html":{}}}],["mergemap((characteristic",{"_index":745,"title":{},"body":{"index.html":{}}}],["mergemap((gatt",{"_index":736,"title":{},"body":{"index.html":{}}}],["mergemap((primaryservice",{"_index":739,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["method",{"_index":701,"title":{},"body":{"index.html":{}}}],["methods",{"_index":142,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["miscellaneous",{"_index":674,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":679,"title":{},"body":{"index.html":{}}}],["mit",{"_index":774,"title":{},"body":{"index.html":{},"license.html":{}}}],["mocked",{"_index":567,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["mockedevent",{"_index":430,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["mode",{"_index":199,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["model",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model_number",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":796,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":84,"title":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":18,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["more",{"_index":352,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{}}}],["more_vert",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{}}}],["movement",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["navigateto",{"_index":144,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator.bluetooth",{"_index":345,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["need",{"_index":752,"title":{},"body":{"index.html":{}}}],["new",{"_index":33,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":288,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngmodule",{"_index":17,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":207,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngoninit",{"_index":208,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["node_modules",{"_index":686,"title":{},"body":{"index.html":{}}}],["nologgerservice",{"_index":28,"title":{"injectables/NoLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["noninfringement",{"_index":826,"title":{},"body":{"index.html":{},"license.html":{}}}],["note",{"_index":683,"title":{},"body":{"index.html":{}}}],["notice",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["notifications",{"_index":708,"title":{},"body":{"index.html":{}}}],["now",{"_index":569,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["npm",{"_index":681,"title":{},"body":{"index.html":{}}}],["null",{"_index":243,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["number",{"_index":230,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["oad",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":568,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"miscellaneous/variables.html":{}}}],["object.keys(titag).map(key",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":785,"title":{},"body":{"index.html":{},"license.html":{}}}],["of(this.haserror.bind(this",{"_index":552,"title":{},"body":{"components/HumidityComponent.html":{}}}],["ondestroy",{"_index":160,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["oninit",{"_index":159,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["open",{"_index":770,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["optionalservices",{"_index":733,"title":{},"body":{"index.html":{}}}],["options",{"_index":35,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["options.enabletracing",{"_index":36,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["otherwise",{"_index":837,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":845,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":649,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parameters",{"_index":218,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":824,"title":{},"body":{"index.html":{},"license.html":{}}}],["period",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":804,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":784,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":337,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["platform/browser",{"_index":26,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["pnp_id",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":814,"title":{},"body":{"index.html":{},"license.html":{}}}],["position",{"_index":175,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["post",{"_index":760,"title":{},"body":{"index.html":{}}}],["pr",{"_index":766,"title":{},"body":{"index.html":{}}}],["primary",{"_index":233,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["private",{"_index":306,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["process",{"_index":731,"title":{},"body":{"index.html":{}}}],["production",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":185,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["project",{"_index":754,"title":{},"body":{"index.html":{}}}],["projects/.../bluetooth.module.ts",{"_index":676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bluetooth.service.ts",{"_index":852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ti",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/manekinekko/angular",{"_index":6,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":148,"title":{},"body":{"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["promise.resolve(this",{"_index":445,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.characteristics[characteristic",{"_index":455,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.services[service].service",{"_index":448,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.value",{"_index":465,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"properties.html":{}}}],["protractor",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":45,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":815,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":325,"title":{},"body":{"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["providers",{"_index":44,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":196,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["publish",{"_index":798,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":825,"title":{},"body":{"index.html":{},"license.html":{}}}],["read",{"_index":727,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":458,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["readvalue",{"_index":464,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["readvalueoptions",{"_index":851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["release",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["request_new_parameters",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestdevice",{"_index":340,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdevice(options",{"_index":342,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdeviceoptions",{"_index":343,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requested",{"_index":726,"title":{},"body":{"index.html":{}}}],["requestvalue",{"_index":209,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restriction",{"_index":792,"title":{},"body":{"index.html":{},"license.html":{}}}],["results",{"_index":50,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["returns",{"_index":147,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["rgba(119,119,119,0.18",{"_index":539,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["rgba(255,161,161,0.30",{"_index":549,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["right",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["rights",{"_index":795,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["root'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["row",{"_index":168,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["run",{"_index":756,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":248,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":322,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["s",{"_index":682,"title":{},"body":{"index.html":{}}}],["section",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":350,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["sell",{"_index":802,"title":{},"body":{"index.html":{},"license.html":{}}}],["sensortag2.ts",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serial_number",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["series",{"_index":496,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["serverwebbluetooth",{"_index":564,"title":{"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["serves",{"_index":755,"title":{},"body":{"index.html":{}}}],["service",{"_index":200,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service.config",{"_index":262,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["service/component",{"_index":692,"title":{},"body":{"index.html":{}}}],["serviceoptions",{"_index":314,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/typealiases.html":{}}}],["services",{"_index":442,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["shall",{"_index":811,"title":{},"body":{"index.html":{},"license.html":{}}}],["singleton",{"_index":258,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["size",{"_index":173,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["smart",{"_index":349,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["smoothie",{"_index":520,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["smoothiechart",{"_index":506,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["snackbar",{"_index":201,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["software",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["software_rev",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["span",{"_index":171,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["span')).gettext",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["specific",{"_index":718,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{}}}],["src/.../battery",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ble.service.ts",{"_index":853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../humidity.component.ts",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepcounter.component.ts",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temperature.component.ts",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/ble.service.ts",{"_index":305,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ble.service.ts:17",{"_index":312,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:19",{"_index":320,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:21",{"_index":315,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:25",{"_index":317,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:29",{"_index":318,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:35",{"_index":319,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:46",{"_index":316,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:8",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/thingy52/battery",{"_index":156,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts",{"_index":491,"title":{},"body":{"components/HumidityComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts:104",{"_index":500,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:108",{"_index":502,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:38",{"_index":513,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:39",{"_index":507,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:40",{"_index":517,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:41",{"_index":516,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:44",{"_index":511,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:46",{"_index":518,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:48",{"_index":498,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:51",{"_index":514,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:52",{"_index":515,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:61",{"_index":503,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:71",{"_index":501,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:81",{"_index":504,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:90",{"_index":505,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:97",{"_index":499,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts",{"_index":570,"title":{},"body":{"components/StepCounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/stepcounter.component.ts:101",{"_index":581,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:49",{"_index":589,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:50",{"_index":587,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:51",{"_index":588,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:53",{"_index":590,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:55",{"_index":578,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:58",{"_index":585,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:59",{"_index":586,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:74",{"_index":582,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:82",{"_index":583,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:87",{"_index":584,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:92",{"_index":579,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:97",{"_index":580,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/temperature.component.ts",{"_index":599,"title":{},"body":{"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/temperature.component.ts:102",{"_index":607,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:108",{"_index":601,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:115",{"_index":602,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:119",{"_index":604,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:38",{"_index":610,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:39",{"_index":608,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:40",{"_index":614,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:41",{"_index":613,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:44",{"_index":609,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:46",{"_index":615,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:48",{"_index":600,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:51",{"_index":611,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:52",{"_index":612,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:66",{"_index":605,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:76",{"_index":603,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:97",{"_index":606,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startblog",{"_index":759,"title":{},"body":{"index.html":{}}}],["started",{"_index":678,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":753,"title":{},"body":{"index.html":{}}}],["state",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":42,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["step",{"_index":535,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcounter",{"_index":571,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["stepcounter'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcountercomponent",{"_index":78,"title":{"components/StepCounterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stepper",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sticky",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["stop",{"_index":706,"title":{},"body":{"index.html":{}}}],["stream",{"_index":310,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["streamsubscription",{"_index":202,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["string",{"_index":223,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["strokestyle",{"_index":538,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["styles",{"_index":155,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["styleurls",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subject",{"_index":807,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicense",{"_index":800,"title":{},"body":{"index.html":{},"license.html":{}}}],["subscribe",{"_index":287,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["subscribe((value",{"_index":272,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribe(device",{"_index":276,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribed",{"_index":707,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":236,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["substantial",{"_index":813,"title":{},"body":{"index.html":{},"license.html":{}}}],["sup",{"_index":182,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["support",{"_index":348,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"modules.html":{}}}],["sure",{"_index":257,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["svg",{"_index":841,"title":{},"body":{"modules.html":{}}}],["system_id",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":431,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["temperature",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["temperaturecomponent",{"_index":80,"title":{"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["templateurl",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["text",{"_index":169,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["thingy52/battery",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/humidity.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/stepcounter.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/temperature.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["this._config",{"_index":330,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.characteristic",{"_index":336,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.service",{"_index":335,"title":{},"body":{"injectables/BleService.html":{}}}],["this.ble",{"_index":334,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"index.html":{}}}],["this.ble.disconnectdevice",{"_index":338,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.getcharacteristic$(primaryservice",{"_index":741,"title":{},"body":{"index.html":{}}}],["this.ble.getdevice",{"_index":331,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":737,"title":{},"body":{"index.html":{}}}],["this.ble.readvalue$(characteristic",{"_index":747,"title":{},"body":{"index.html":{}}}],["this.ble.requestdevice(options",{"_index":354,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this.ble.streamvalues$().pipe",{"_index":332,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.streamvalues$().pipe(map((value",{"_index":715,"title":{},"body":{"index.html":{}}}],["this.characteristics.service",{"_index":452,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.chart",{"_index":532,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.addtimeseries(this.series",{"_index":546,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.start",{"_index":555,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.stop",{"_index":551,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.streamto(canvas",{"_index":550,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chartref.nativeelement",{"_index":530,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.color",{"_index":277,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.connected",{"_index":444,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.console.log('reading",{"_index":293,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.device.disconnect",{"_index":449,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.devicesubscription",{"_index":275,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription.unsubscribe",{"_index":296,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription?.unsubscribe",{"_index":301,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.getdevicestatus",{"_index":269,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror(err",{"_index":292,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.haserror(error",{"_index":274,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror.bind(this",{"_index":284,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.id",{"_index":436,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.initchart",{"_index":527,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.initialvalue",{"_index":463,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners",{"_index":439,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.characteristicvaluechanged.foreach(listener",{"_index":467,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.gattserverdisconnected.foreach(listener",{"_index":433,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners[type",{"_index":429,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.mode",{"_index":279,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.name",{"_index":438,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.properties",{"_index":462,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.series",{"_index":528,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.append(date.now",{"_index":554,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.clear",{"_index":556,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.disconnectdevice",{"_index":295,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.getdevice",{"_index":261,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.stream",{"_index":271,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.value",{"_index":286,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.snackbar.open(error",{"_index":298,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription",{"_index":270,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":557,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription?.unsubscribe",{"_index":302,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.updatevalue(val",{"_index":290,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.updatevalue(value",{"_index":273,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.value",{"_index":281,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/StepCounterComponent.html":{}}}],["this.valuessubscription",{"_index":285,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription.unsubscribe",{"_index":297,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription?.unsubscribe",{"_index":300,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["throw",{"_index":346,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["ti_sensorag_services",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":593,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["timeseries",{"_index":512,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["titag",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["titag[key].service",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar.mat",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tooltip",{"_index":545,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["top",{"_index":177,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["tort",{"_index":836,"title":{},"body":{"index.html":{},"license.html":{}}}],["tree",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["trigger",{"_index":729,"title":{},"body":{"index.html":{}}}],["true",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":326,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":849,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/web",{"_index":663,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["undefined",{"_index":437,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["unknown",{"_index":432,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["updatevalue",{"_index":210,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["updatevalue(value",{"_index":229,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["use",{"_index":691,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":46,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":47,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["using",{"_index":698,"title":{},"body":{"index.html":{}}}],["val",{"_index":289,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["value",{"_index":192,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.count",{"_index":598,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getint8(0",{"_index":265,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["value.getuint32(0",{"_index":592,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint32(4",{"_index":594,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint8(0",{"_index":716,"title":{},"body":{"index.html":{}}}],["value.getuint8(1",{"_index":619,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["values",{"_index":702,"title":{},"body":{"index.html":{}}}],["valuessubscription",{"_index":203,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["variable",{"_index":328,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{}}}],["variables",{"_index":854,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":847,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":519,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["viewchild('chart",{"_index":510,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["void",{"_index":220,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["want",{"_index":724,"title":{},"body":{"index.html":{}}}],["warn",{"_index":278,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(...args",{"_index":362,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(args",{"_index":367,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warranties",{"_index":821,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":816,"title":{},"body":{"index.html":{},"license.html":{}}}],["wassim",{"_index":778,"title":{},"body":{"index.html":{},"license.html":{}}}],["way",{"_index":694,"title":{},"body":{"index.html":{}}}],["web",{"_index":7,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["webbluetoothmodule",{"_index":41,"title":{"modules/WebBluetoothModule.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["webbluetoothmodule.forroot",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcome",{"_index":768,"title":{},"body":{"index.html":{}}}],["whether",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{}}}],["width",{"_index":179,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["window.smoothiechart",{"_index":533,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["window.timeseries",{"_index":529,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["without",{"_index":791,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":470,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["z",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.js",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AWBOptions.html":{"url":"interfaces/AWBOptions.html","title":"interface - AWBOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AWBOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enableTracing\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableTracing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableTracing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BatteryLevelComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            HumidityComponent\n                        \n                        \n                            StepCounterComponent\n                        \n                        \n                            TemperatureComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WebBluetoothModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './thingy52/battery-level.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HumidityComponent } from './thingy52/humidity.component';\nimport { StepCounterComponent } from './thingy52/stepcounter.component';\nimport { TemperatureComponent } from './thingy52/temperature.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BatteryLevelComponent,\n    TemperatureComponent,\n    HumidityComponent,\n    StepCounterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTitleText\n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryLevelComponent.html":{"url":"components/BatteryLevelComponent.html","title":"component - BatteryLevelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BatteryLevelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/battery-level.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-battery-level\n            \n\n\n            \n                styles\n                \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  \n            \n\n            \n                template\n                {{ value || \"000\" }}%\n\n\nbattery_charging_full\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Public\n                                console\n                            \n                            \n                                deviceSubscription\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar, console: ConsoleLoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/battery-level.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                        ConsoleLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceStatus\n                        \n                    \n                \n            \n            \n                \ngetDeviceStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConsoleLoggerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'determinate'\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/battery-level.component.ts:73\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n\n@Component({\n  selector: 'ble-battery-level',\n  template: `\n    {{ value || \"000\" }}%\n    \n    \n    battery_charging_full\n  `,\n  styles: [`\n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  `],\n  providers: PROVIDERS\n})\nexport class BatteryLevelComponent implements OnInit, OnDestroy {\n  value = null;\n  mode = 'determinate';\n  color = 'primary';\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  deviceSubscription: Subscription;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar,\n    public console: ConsoleLoggerService) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt8(0),\n      service: 'battery_service',\n      characteristic: 'battery_level'\n    });\n  }\n\n  ngOnInit() {\n    this.getDeviceStatus();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe((value: number) => {\n        this.updateValue(value);\n      }, error => this.hasError(error));\n\n  }\n\n  getDeviceStatus() {\n    this.deviceSubscription = this.service.getDevice()\n      .subscribe(device => {\n        if (device) {\n          this.color = 'warn';\n          this.mode = 'indeterminate';\n          this.value = null;\n        } else {\n          // device not connected or disconnected\n          this.value = null;\n          this.mode = 'determinate';\n          this.color = 'primary';\n        }\n      }, this.hasError.bind(this));\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  updateValue(value: number) {\n    this.console.log('Reading battery level %d', value);\n    this.value = value;\n    this.mode = 'determinate';\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.deviceSubscription.unsubscribe();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription?.unsubscribe();\n    this.deviceSubscription?.unsubscribe();\n    this.streamSubscription?.unsubscribe();\n  }\n}\n\n\n    \n\n\n    \n            \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}%battery_charging_full'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryLevelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BleService.html":{"url":"injectables/BleService.html","title":"injectable - BleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ble.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Public\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disconnectDevice\n                            \n                            \n                                getDevice\n                            \n                            \n                                stream\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/ble.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                        BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n            \n                \nconfig(options: ServiceOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ServiceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectDevice\n                        \n                    \n                \n            \n            \n                \ndisconnectDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevice\n                        \n                    \n                \n            \n            \n                \ngetDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stream\n                        \n                    \n                \n            \n            \n                \nstream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/ble.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BluetoothCore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/ble.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\ntype ServiceOptions = {\n    characteristic: string;\n    service: string,\n    decoder(value: DataView): number | {[key: string]: number}\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleService {\n\n    // tslint:disable-next-line: variable-name\n    private _config: ServiceOptions;\n\n  constructor(public ble: BluetoothCore) {}\n\n  config(options: ServiceOptions) {\n    this._config = options;\n  }\n\n  getDevice() {\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    return this.ble.streamValues$().pipe(\n      map(this._config.decoder)\n    );\n  }\n\n  value() {\n    return this.ble\n      .value$({\n        service: this._config.service,\n        characteristic: this._config.characteristic\n      })\n      .pipe(\n        map(this._config.decoder)\n      );\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserWebBluetooth.html":{"url":"injectables/BrowserWebBluetooth.html","title":"injectable - BrowserWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrowserWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        requestDevice\n                        \n                    \n                \n            \n            \n                \nrequestDevice(options: RequestDeviceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RequestDeviceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ble\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private ble;\n\n  constructor() {\n    this.ble = navigator.bluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise {\n    return this.ble.requestDevice(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  Angular Web BLE Demo\n\n\n\n  \n\n    \n\n    \n      \n        \n          \n            Battery Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Humidity Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Temperature\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Stepper\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                section {\n  padding: 40px;\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n\nimg {\n  width: 32px;\n  margin: 0 10px;\n}\n\n.mat-icon {\n  margin: 0 10px 0 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Angular Web BLE Demo                                              Battery Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Humidity Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Temperature                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Stepper                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothDevice.html":{"url":"classes/FakeBluetoothDevice.html","title":"class - FakeBluetoothDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gatt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                clear\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gatt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BluetoothRemoteGATTServer\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    gattserverdisconnected: []\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{"url":"classes/FakeBluetoothRemoteGATTCharacteristic.html","title":"class - FakeBluetoothRemoteGATTCharacteristic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTCharacteristic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                initialValue\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                properties\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                changeValue\n                            \n                            \n                                clear\n                            \n                            \n                                readValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                    BluetoothCharacteristicProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialValue\n                                                  \n                                                        \n                                                                    DataView\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        initialValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataView\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    characteristicvaluechanged: []\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BluetoothCharacteristicProperties\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataView\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeValue\n                        \n                    \n                \n            \n            \n                \nchangeValue(value: DataView)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            DataView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readValue\n                        \n                    \n                \n            \n            \n                \nreadValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTServer.html":{"url":"classes/FakeBluetoothRemoteGATTServer.html","title":"class - FakeBluetoothRemoteGATTServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connected\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                getPrimaryService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, services: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        services\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        device\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrimaryService\n                        \n                    \n                \n            \n            \n                \ngetPrimaryService(service: BluetoothServiceUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            BluetoothServiceUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTService.html":{"url":"classes/FakeBluetoothRemoteGATTService.html","title":"class - FakeBluetoothRemoteGATTService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                characteristics\n                            \n                            \n                                    Public\n                                device\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCharacteristic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, characteristics)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characteristics\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        characteristics\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        device\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCharacteristic\n                        \n                    \n                \n            \n            \n                \ngetCharacteristic(characteristic: BluetoothCharacteristicUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    characteristic\n                                    \n                                            BluetoothCharacteristicUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityComponent.html":{"url":"components/HumidityComponent.html","title":"component - HumidityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HumidityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/humidity.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-humidity\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/humidity.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/humidity.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { of, Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-humidity',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class HumidityComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', { static: true })\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt8(0),\n      service: 'ef680200-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680203-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    // tslint:disable-next-line: max-line-length\n    this.chart = new window.SmoothieChart({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(\n        () => null,\n        () => of(this.hasError.bind(this)),\n      );\n  }\n\n\n  updateValue(value: number) {\n    console.log('Reading humidity %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoLoggerService.html":{"url":"injectables/NoLoggerService.html","title":"injectable - NoLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerWebBluetooth.html":{"url":"injectables/ServerWebBluetooth.html","title":"injectable - ServerWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServerWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        instance\n                        \n                    \n                \n            \n            \n                \n                    \n                    instance()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepCounterComponent.html":{"url":"components/StepCounterComponent.html","title":"component - StepCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/stepcounter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-stepcounter\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    font-size: 11em;\n    width: 100%;\n    height: 100%;\n  }\n            \n\n            \n                template\n                {{ value || \"000\" }}\ndirections_walk\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/stepcounter.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/stepcounter.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-stepcounter',\n  template: `\n  {{ value || \"000\" }}\n  directions_walk\n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    font-size: 11em;\n    width: 100%;\n    height: 100%;\n  }`],\n  providers: PROVIDERS\n})\nexport class StepCounterComponent implements OnInit, OnDestroy {\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  value = 0;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => {\n        const count = value.getUint32(0, true);\n        const time = value.getUint32(4, true);\n        return {\n          count, time\n        };\n      },\n      service: 'ef680400-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680405-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: { time: number, count: number }) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: { time: number, count: number }) {\n    console.log('Reading step counter %d', value);\n    this.value = value.count;\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    font-size: 11em;\n    width: 100%;\n    height: 100%;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}directions_walk'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StepCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemperatureComponent.html":{"url":"components/TemperatureComponent.html","title":"component - TemperatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TemperatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/temperature.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-temperature\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/temperature.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/temperature.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-temperature',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class TemperatureComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', { static: true })\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      characteristic: 'ef680201-9b35-4933-9b10-52ffa9740042',\n      service: 'ef680200-9b35-4933-9b10-52ffa9740042',\n      decoder: (value: DataView) => {\n        const integer = value.getInt8(0);\n        const decimal = value.getUint8(1);\n        return integer + decimal / 100;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe({\n        next: (val: number) => this.updateValue(val),\n        error: (err) => this.hasError(err)\n      });\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    this.chart = new window.SmoothieChart({\n      interpolation: 'step',\n      grid: {\n        fillStyle: '#ffffff',\n        strokeStyle: 'rgba(119,119,119,0.18)',\n        borderVisible: false\n      },\n      labels: {\n        fillStyle: '#000000',\n        fontSize: 17\n      },\n      tooltip: true\n    });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    console.log('Reading temperature %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemperatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebBluetoothModule.html":{"url":"modules/WebBluetoothModule.html","title":"module - WebBluetoothModule","body":"\n                   \n\n\n\n\n    Modules\n    WebBluetoothModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AWBOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            interface\n            AWBOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            browserWebBluetooth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            consoleLoggerServiceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            makeMeTokenInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n            \n            injectable\n            BluetoothCore\n            \n                67 %\n                (21/31)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TI_SENSORAG_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TiTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            ConsoleLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            NoLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            interface\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n            \n            injectable\n            BrowserWebBluetooth\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n            \n            injectable\n            ServerWebBluetooth\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothDevice\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTCharacteristic\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ble.service.ts\n            \n            injectable\n            BleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            component\n            BatteryLevelComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            component\n            HumidityComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            component\n            StepCounterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            component\n            TemperatureComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.1.3\n        \n            @angular/cdk : ^17.1.2\n        \n            @angular/common : ^17.1.3\n        \n            @angular/compiler : ^17.1.3\n        \n            @angular/core : ^17.1.3\n        \n            @angular/forms : ^17.1.3\n        \n            @angular/material : ^17.1.2\n        \n            @angular/platform-browser : ^17.1.3\n        \n            @angular/platform-browser-dynamic : ^17.1.3\n        \n            @angular/router : ^17.1.3\n        \n            @release-it/conventional-changelog : ^5.1.1\n        \n            @types/web-bluetooth : 0.0.6\n        \n            rxjs : ~7.8.0\n        \n            smoothie : ^1.35.0\n        \n            ts-jest : ^29.0.5\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWebBluetooth   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            consoleLoggerServiceConfig   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            makeMeTokenInjector   (projects/.../bluetooth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        browserWebBluetooth\n                        \n                    \n                \n            \n            \n                \nbrowserWebBluetooth()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consoleLoggerServiceConfig\n                        \n                    \n                \n            \n            \n                \nconsoleLoggerServiceConfig(options: AWBOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMeTokenInjector\n                        \n                    \n                \n            \n            \n                \nmakeMeTokenInjector()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular\n\n\nInstall\nnpm install -S @manekinekko/angular-web-bluetooth @types/web-bluetooth\nNote: Make also sure the @types/web-bluetooth is installed correctly in your node_modules.\n\nGetting started\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true // or false, this will enable logs in the browser's console\n    })\n  ]\n  //...\n})\nexport class AppModule {}2.a) use it in your service/component (the easiest way)\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n\n  constructor(public readonly ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    // call this method to get a stream of values emitted by the device for a given characteristic\n    return this.ble.streamValues$().pipe(\n      map((value: DataView) => value.getInt8(0))\n    );\n  }\n\n  disconnectDevice() {\n    // call this method to disconnect from the device. This method will also stop clear all subscribed notifications\n    this.ble.disconnectDevice();\n  }\n\n  value() {\n    console.log('Getting Battery level...');\n\n    return this.ble\n      .value$({\n        service: 'battery_service',\n        characteristic: 'battery_level'\n      });\n  }\n\n}2.b) use it in your service/component (the advanced way)\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics they want.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  value() {\n    console.log('Getting Battery level...');\n\n    return this.ble\n\n        // 1) call the discover method will trigger the discovery process (by the browser)\n        .discover$({\n          acceptAllDevices: true,\n          optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n        })\n        .pipe(\n\n          // 2) get that service\n          mergeMap((gatt: BluetoothRemoteGATTServer) => {\n            return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n          }),\n\n          // 3) get a specific characteristic on that service\n          mergeMap((primaryService: BluetoothRemoteGATTService) => {\n            return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n          }),\n\n          // 4) ask for the value of that characteristic (will return a DataView)\n          mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n            return this.ble.readValue$(characteristic);\n          }),\n\n          // 5) on that DataView, get the right value\n          map((value: DataView) => value.getUint8(0))\n        )\n  }\n}API documentation\nThe API documentation can be found here:  https://manekinekko.github.io/angular-web-bluetooth/\nNeed a starter?\n\n\nThis project serves also as a starter. Run the following command:\nnpm startBlog post\nCheckout my full blog post on dev.to about how to use this package in your app.\nHave a PR?\nAll contributions are welcome. Here are few open issues that I need help with ;)\nLicense\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebBluetoothModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 16.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadValueOptions   (projects/.../bluetooth.service.ts)\n                        \n                        \n                            ServiceOptions   (src/.../ble.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReadValueOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/ble.service.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bleCore   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleCore   (src/.../humidity.component.ts)\n                        \n                        \n                            bleCore   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleCore   (src/.../temperature.component.ts)\n                        \n                        \n                            bleService   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleService   (src/.../humidity.component.ts)\n                        \n                        \n                            bleService   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleService   (src/.../temperature.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PROVIDERS   (src/.../battery-level.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../humidity.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../stepcounter.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../temperature.component.ts)\n                        \n                        \n                            TI_SENSORAG_SERVICES   (projects/.../ti-sensortag2.ts)\n                        \n                        \n                            TiTag   (projects/.../ti-sensortag2.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/thingy52/battery-level.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/humidity.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/stepcounter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/temperature.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TI_SENSORAG_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(TiTag).map(key => TiTag[key].SERVICE)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TiTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
