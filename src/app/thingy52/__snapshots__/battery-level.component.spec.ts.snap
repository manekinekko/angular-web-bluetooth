// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BatteryLevelComponent should create 1`] = `
<ble-battery-level
  color={[Function String]}
  console={[Function NoLoggerService]}
  deviceSubscription="null"
  mode={[Function String]}
  service={[Function BleService]}
  snackBar={[Function _MatSnackBar]}
  streamSubscription="null"
  value="0"
  valuesSubscription="null"
>
  <span
    data-testid="value"
  >
    <sup>
      %
    </sup>
  </span><mat-progress-spinner
    class="mat-mdc-progress-spinner mdc-circular-progress"
    diameter="250"
    role="progressbar"
    strokewidth="2"
    tabindex="-1"
  >
    <div
      aria-hidden="true"
      class="mdc-circular-progress__determinate-container"
    >
      <svg
        class="mdc-circular-progress__determinate-circle-graphic"
        focusable="false"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          class="mdc-circular-progress__determinate-circle"
          cx="50%"
          cy="50%"
        />
      </svg>
    </div>
    <div
      aria-hidden="true"
      class="mdc-circular-progress__indeterminate-container"
    >
      <div
        class="mdc-circular-progress__spinner-layer"
      >
        <div
          class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left"
        >
        </div>
        <div
          class="mdc-circular-progress__gap-patch"
        >
        </div>
        <div
          class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right"
        >
        </div>
      </div>
    </div>
  </mat-progress-spinner><mat-icon
    aria-hidden="true"
    class="mat-icon notranslate"
    role="img"
  >
    battery_charging_full
  </mat-icon>
</ble-battery-level>
`;

exports[`BatteryLevelComponent should display device connected state 1`] = `
<ble-battery-level
  color={[Function String]}
  console={[Function NoLoggerService]}
  deviceSubscription={[Function SafeSubscriber]}
  mode={[Function String]}
  service={[Function BleService]}
  snackBar={[Function _MatSnackBar]}
  streamSubscription={[Function SafeSubscriber]}
  value="0"
  valuesSubscription={[Function SafeSubscriber]}
>
  <span
    data-testid="value"
  >
    000
    <sup>
      %
    </sup>
  </span><mat-progress-spinner
    aria-valuemax="100"
    aria-valuemin="0"
    class="mat-mdc-progress-spinner mdc-circular-progress mat-warn _mat-animation-noopable mdc-circular-progress--indeterminate"
    diameter="250"
    mode="indeterminate"
    role="progressbar"
    strokewidth="2"
    style="width: 250px; height: 250px; --mat-progress-spinner-size: 250px; --mat-progress-spinner-active-indicator-width: 250px;"
    tabindex="-1"
  >
    <div
      aria-hidden="true"
      class="mdc-circular-progress__determinate-container"
    >
      <svg
        class="mdc-circular-progress__determinate-circle-graphic"
        focusable="false"
        viewBox="0 0 242 242"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          class="mdc-circular-progress__determinate-circle"
          cx="50%"
          cy="50%"
          r="120"
          style="stroke-dasharray: 753.9822368615503px; stroke-width: 0.8%;"
        />
      </svg>
    </div>
    <div
      aria-hidden="true"
      class="mdc-circular-progress__indeterminate-container"
    >
      <div
        class="mdc-circular-progress__spinner-layer"
      >
        <div
          class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left"
        >
          <svg
            class="mdc-circular-progress__indeterminate-circle-graphic"
            focusable="false"
            viewBox="0 0 242 242"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle
              cx="50%"
              cy="50%"
              r="120"
              style="stroke-dasharray: 753.9822368615503px; stroke-dashoffset: 376.99111843077515px; stroke-width: 0.8%;"
            />
          </svg>
        </div>
        <div
          class="mdc-circular-progress__gap-patch"
        >
          <svg
            class="mdc-circular-progress__indeterminate-circle-graphic"
            focusable="false"
            viewBox="0 0 242 242"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle
              cx="50%"
              cy="50%"
              r="120"
              style="stroke-dasharray: 753.9822368615503px; stroke-dashoffset: 376.99111843077515px; stroke-width: 0.8%;"
            />
          </svg>
        </div>
        <div
          class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right"
        >
          <svg
            class="mdc-circular-progress__indeterminate-circle-graphic"
            focusable="false"
            viewBox="0 0 242 242"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle
              cx="50%"
              cy="50%"
              r="120"
              style="stroke-dasharray: 753.9822368615503px; stroke-dashoffset: 376.99111843077515px; stroke-width: 0.8%;"
            />
          </svg>
        </div>
      </div>
    </div>
  </mat-progress-spinner><mat-icon
    aria-hidden="true"
    class="mat-icon notranslate material-icons mat-ligature-font mat-icon-no-color"
    data-mat-icon-type="font"
    role="img"
  >
    battery_charging_full
  </mat-icon>
</ble-battery-level>
`;
